import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

buildscript {
    ext.serialization_version = '0.9.1'
    ext.jline_version = '3.9.0'
    ext.shadow_version = '2.0.1'

    repositories {
        jcenter()
        maven { url "https://kotlin.bintray.com/kotlinx" }
    }

    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadow_version"
    }
}

plugins {
    id 'kotlin-multiplatform' version '1.3.11'
    id 'kotlinx-serialization' version '1.3.11'
}

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

kotlin {
    targets {
        fromPreset(presets.jvm, 'jvm')
        fromPreset(presets.macosX64, 'nat')

        configure([nat]) {
            compilations.main.outputKinds 'executable'
            compilations.main.entryPoint 'klisp.main'
            compilations.main.cinterops {
                linenoise {
                    includeDirs 'src/nativeInterop/cinterop'
                }
            }
        }

        all {
            compilations.all {
                tasks[compileKotlinTaskName].kotlinOptions {
                    freeCompilerArgs = ['-Xuse-experimental=kotlin.Experimental']
                }
            }
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$serialization_version"
            }
        }

        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-common'
                implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
            }
        }

        jvmMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
                implementation 'org.jetbrains.kotlin:kotlin-reflect'
                implementation "org.jline:jline:$jline_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
            }
        }

        jvmTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test'
                implementation 'org.jetbrains.kotlin:kotlin-test-junit'
            }
        }

        natMain {
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:$serialization_version"
            }
        }

        all {
            languageSettings {
                progressiveMode = true
            }
        }
    }
}

task runJar(type: JavaExec) {
//    dependsOn assemble
    dependsOn jvmJar
    main = 'klisp.KlispKt'
    classpath = files(kotlin.targets.jvm.compilations.main.output) + kotlin.targets.jvm.compilations.main.runtimeDependencyFiles
}

task uberJar(type: ShadowJar) {
    manifest {
        attributes "Main-Class": 'klisp.KlispKt'
    }

    def target = kotlin.targets.jvm
    from target.compilations.main.output
    def runtimeClasspath = target.compilations.main.runtimeDependencyFiles
    configurations = [runtimeClasspath]
}
