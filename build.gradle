buildscript {
    ext.serialization_version = '0.10.0'
    ext.jline_version = '3.9.0'
    ext.coroutines_version = '1.1.1'

    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://kotlin.bintray.com/kotlinx" }
        maven { url 'https://dl.bintray.com/jetbrains/kotlin-native-dependencies' }
    }
}

plugins {
    id 'kotlin-multiplatform' version '1.3.20'
    id 'kotlinx-serialization' version '1.3.20'
//    id 'com.gradle.build-scan' version '2.0.2'
    id 'com.github.johnrengelman.shadow' version '4.0.2'
    id 'com.peterabeles.gversion' version '1.4.0'
}

wrapper {
    gradleVersion = '5.1.1'
    distributionType = Wrapper.DistributionType.BIN
}

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://kotlin.bintray.com/kotlinx" }
    maven { url 'https://dl.bintray.com/jetbrains/kotlin-native-dependencies' }
}

group = 'org.cth.klisp'
version = '0.0.1'

kotlin {
    targets {
        fromPreset(presets.jvm, 'jvm')
        fromPreset(presets.macosX64, 'nat')

        configure([nat]) {
            compilations.main.outputKinds 'executable'
            compilations.main.entryPoint 'klisp.main'
            compilations.main.cinterops {
                linenoise {
                    includeDirs 'src/nativeInterop/cinterop'
                }
            }
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$serialization_version"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$coroutines_version"
            }
        }

        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-common'
                implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
            }
        }

        jvmMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
                implementation 'org.jetbrains.kotlin:kotlin-reflect'
                implementation "org.jline:jline:$jline_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
            }
        }

        jvmTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test'
                implementation 'org.jetbrains.kotlin:kotlin-test-junit'
            }
        }

        natMain {
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:$serialization_version"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-native:$coroutines_version"
            }
        }

        all {
            languageSettings {
                progressiveMode = true
            }
        }
    }
}

task shadowJar(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    from kotlin.targets.jvm.compilations.main.output
    def runtimeClasspath = kotlin.targets.jvm.compilations.main.runtimeDependencyFiles
    configurations = [runtimeClasspath]
    manifest {
        attributes 'Main-Class': 'klisp.KlispKt'
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    dependsOn(createVersionFile)

    kotlinOptions {
        jvmTarget = "1.8"
        apiVersion = "1.3"
        languageVersion = "1.3"
        javaParameters = true
        freeCompilerArgs = ['-Xuse-experimental=kotlin.Experimental']
    }
}

gversion {
    srcDir = "src/commonMain/kotlin"
    classPackage = "klisp"
    className = "version"
    dateFormat = "yyyy-MM-dd'T'HH:mm:ss'Z'"
    timeZone = "UTC"
    debug = false
    language = "kotlin"
}

